<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributed systems on My New Hugo Site</title>
    <link>https://www.frankliu.org/hugo/tags/distributed-systems/</link>
    <description>Recent content in distributed systems on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 08:49:58 -0700</lastBuildDate>
    
	<atom:link href="https://www.frankliu.org/hugo/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flink</title>
      <link>https://www.frankliu.org/hugo/posts/flink/</link>
      <pubDate>Sat, 18 Apr 2020 08:49:58 -0700</pubDate>
      
      <guid>https://www.frankliu.org/hugo/posts/flink/</guid>
      <description>What is it  a distributed runtime uses pipelines for execution exactly-once state consistency lightweight checkpoint iterative processing windows semantics out-of-order processing  2 architecture cluster  client job manager task manager (1 or more)  client  takes a program xforms to dataflow graph submits to job manager creates data schema and serializers cost-based query optmization  job manager  coordinates distributed execution of dataflow tracks state and progress of each operator and stream schedules new operators coordinates checkpoints and recovery persists minimal set of data for checkpoint and recovery  task manager  executes one or more operators report status to job manager maintain buffer pools to buffer or materialize streams maintain network connections to exchange of streams between operators    3.</description>
    </item>
    
    <item>
      <title>Facebook - memcached</title>
      <link>https://www.frankliu.org/hugo/posts/facebook-memcached/</link>
      <pubDate>Sat, 07 Mar 2020 07:47:47 -0800</pubDate>
      
      <guid>https://www.frankliu.org/hugo/posts/facebook-memcached/</guid>
      <description>Requirements  real-time aggregate dispersed data access hot set scale refs [1,2,5,6,12,14,34,36]  Front-end cluster    read heavy workload (100:1 R/W) wide fanout handle failures 10 Mops/s  Q: what is a wide fanout
Multiple FE clusters  single geo region control data replication data consistency 100 Mops/s  Multiple regions  muliple geo regions storage replication data consistency 1 Bops/s  Pre-memcached   High fanout    data dependency graph for a small user request  Look-aside cache   why deletes over set</description>
    </item>
    
  </channel>
</rss>