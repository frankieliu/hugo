<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>debugger on My New Hugo Site</title>
    <link>https://www.frankliu.org/hugo/tags/debugger/</link>
    <description>Recent content in debugger on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jun 2020 12:13:39 -0700</lastBuildDate>
    
	<atom:link href="https://www.frankliu.org/hugo/tags/debugger/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bomb lab</title>
      <link>https://www.frankliu.org/hugo/posts/bomb/</link>
      <pubDate>Tue, 02 Jun 2020 12:13:39 -0700</pubDate>
      
      <guid>https://www.frankliu.org/hugo/posts/bomb/</guid>
      <description>Description From Bryant and O&amp;rsquo;Hallaron&amp;rsquo;s book Computer Systems: A Programmer&amp;rsquo;s Perspective.
 http://www.cs.cmu.edu/~bryant/ http://www.cs.cmu.edu/~droh/ http://csapp.cs.cmu.edu/  One of the first labs. The Bomb Lab, contains a binary bomb that must be diffused, by disassembling the executable.
sample bomb A sample bomb can be obtained here.
 http://csapp.cs.cmu.edu/3e/labs.html  problem set and blog Here are a couple of helpful resources:
 https://web.stanford.edu/class/archive/cs/cs107/cs107.1174/assign5/advice.html http://zpalexander.com/binary-bomb-lab-phase-1/  name list (nm), strings, objdump These are kind of unnecessary, all can be done within gdb.</description>
    </item>
    
  </channel>
</rss>