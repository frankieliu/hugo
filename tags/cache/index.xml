<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cache on My New Hugo Site</title>
    <link>https://www.frankliu.org/hugo/tags/cache/</link>
    <description>Recent content in cache on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Nov 2019 14:40:38 -0800</lastBuildDate>
    
	<atom:link href="https://www.frankliu.org/hugo/tags/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode 460. LFU Cache</title>
      <link>https://www.frankliu.org/hugo/posts/460-lfu-cache/</link>
      <pubDate>Mon, 18 Nov 2019 14:40:38 -0800</pubDate>
      
      <guid>https://www.frankliu.org/hugo/posts/460-lfu-cache/</guid>
      <description>Requirements  O(1) insertion  requires O(1) getting the least frequently used   Suggested data structures  f: a map from frequency to a tuple containing the head and tail of a portion of a double linked list kv: a map from key to a node in the double linked list dll: a double linked list where the least frequent item is at the head of the list node: element of dll, containing frequency info, as well a prev, next, value, the usual stuff    put(a,v)  find corresponding node via kv[a] delete head of double linked list and update f accordingly delete node from its current position and insert it at the head of the next frequency, i.</description>
    </item>
    
  </channel>
</rss>